import json
import os
import time
import string
import random

def id_generator(size=15, chars=string.ascii_letters + string.digits):
    return "".join(random.choice(chars) for _ in range(size))
def add_new_alerts(final_cve_obj, logger):
    alerts_path = os.path.join("response_folder", "alerts.json")
    alerts_obj = []
    if(os.path.exists(alerts_path)):
        # Load JSON data from file
        with open(alerts_path, "r", encoding="utf-8") as file:
            alerts_obj = json.load(file)

        # Iterate over each event in the JSON
        #for event in alerts_obj:
         #   print(f"Artifact: {event.get('Artifact', 'N/A')}")
          #  print(f"Timestamp: {event.get('Timestamp', 'N/A')}")
    _ts = time.time() * 1000
    for cve_name, value in final_cve_obj.items():
        full_name = "Custom.10root.CVE.Management"
        
        is_cve_exists = False
        for alert in alerts_obj:
            if(full_name == alert["CVE"]):
                is_cve_exists = True
                break
        if(is_cve_exists == False):

            new_alert = {
    "Artifact": full_name,
    "CVE": cve_name,
    "_ts": _ts,
    "ProductName": value["product_name"],
    "CVE Description": value["description"],
    "CVSS": value["cvss_v3"],
    "Published": value["published"],
    "Last Modified": value["last_modified"],
    "AlertID": id_generator(),
    "UserInput": {
        "UserId": "",
        "Status": "New",
        "ChangedAt": ""
    }}
            alerts_obj.append(new_alert)
    # Ensure the directory exists
    os.makedirs(os.path.dirname(alerts_path), exist_ok=True)

    # Create or overwrite the file
    with open(alerts_path, "w") as f:
        json.dump(alerts_obj, f, indent=4)